name: model-pipeline
on:
  push:
    branches:
      - main
jobs:
  run:
    runs-on: ubuntu-latest
    # optionally use a convenient Ubuntu LTS + DVC + CML image
    # container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - uses: actions/checkout@v2
      # may need to setup NodeJS & Python3 on e.g. self-hosted
      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '16'
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.x'
      - uses: iterative/setup-cml@v1
      - name: Train model
        run: |
          # Your ML workflow goes here
          sudo pip install -r requirements.txt
          sudo python train.py
      - name: Write CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Post reports as comments in GitHub PRs
          cat results.txt >> report.md
          cml send-comment report.md




 

###name: CML

# Controls when the workflow will run
#on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
 # push:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
  # This workflow contains a single job called "build"
 # build:
    # The type of runner that the job will run on
  #  runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
   # steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    #  - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      #- name: Run a one-line script
     #   run: echo Hello, world!

      # - uses: iterative/setup-cml@V1
      #- name: Train Model
       # run: |
          #this is workflow
        #  sudo pip install -r requirements.txt
          #sudo python train.py
     # - name: CML report
      #  env:
       #   REPO_TOKEN: ${{secrets.GITHUB_TOKEN}}
        #run: |
          #add the CML report as comments in PRs
          #cat results.txt >> report.md
          #cml send-comment report.md"""
          
      
